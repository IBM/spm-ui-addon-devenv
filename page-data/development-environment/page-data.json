{"componentChunkName":"component---src-pages-development-environment-mdx","path":"/development-environment/","result":{"pageContext":{"frontmatter":{"title":"Development environment","description":"Development environment"},"relativePagePath":"/development-environment.mdx","titleType":"page","MdxNode":{"id":"b39e0787-73ce-5ace-a865-4eb48fcc3b61","children":[],"parent":"fdea8a4f-7409-505b-9ce5-fd1df6b9288d","internal":{"content":"---\ntitle: Development environment\ndescription: Development environment\n---\n\nAmong other files, the repository contains the following significant items. Depending on your operating system, you might need to show hidden files to see them all.\n\n```\nSPM-UI-ADDON-DEV\n└───.storybook          The stories for the sample components. Add stories for your components here.\n└───cookbook            The developer documentation source files.\n└───packages            The repository provides these packages.\n    └───carbon-addon-devenv\n    └───custom-carbon-addons\n    └───graphql-mocks\n    .env                A starter React environment variable configuration file.\n```\n\n## The `carbon-addon-devenv` package\n\nThe `carbon-addon-devenv` package contains the development environment to work with Carbon components and to develop custom Carbon add-on components.\n\nIt contains two sample add-on components to help you to get started, which need a Java renderer and a GraphQL query to integrate them onto a UIM page.\n\n```\ncarbon-addon-devenv\n└───sample_renderers\n└───src\n└───stories\n    PersonFolio.stories.js\n```\n\nAn `npm` file is provided for the following open source packages:\n\n- Carbon Design System, which is an IBM open source design system. It consists of working code, design tools and resources, and human interface guidelines. For more information, see the [Carbon website](https://carbondesignsystem.com/).\n- React, which is an open source JavaScript library that enables developers to build human-centered user interfaces.\n- GraphQL, which is an open source data query language that enables developers to query and configure complex data queries that aggregate information from different database entities.\n- Apollo Client, which is an open source library that enables GraphQL developers to manage information state. Apollo Client provides the infrastructure for caching data.\n- Jest is a JavaScript testing framework that is designed to ensure the correctness of any JavaScript code base.\n- Enzyme is a JavaScript testing utility for React that makes it easier to test your React component's output.\n\n## The `custom-carbon-addons` package\n\nThe `custom-carbon-addons` package is where you must place all of your custom files, to ensure that upgrades do not affect your custom content.\n\n```\ncustom-carbon-addons\n└───renderers\n│   index.js\n└───src\n    package.json_sample\n\n```\n\n## The `graphql-mocks` package\n\nThe `graphql-mocks` package is where you can place data for mock GraphQL queries. This package essentially provides a\nlightweight mock GraphQL service that simulates the real GraphQL service from Cúram.\n\n```\ngraphql-mocks\n└───resolvers\n│   └─── data\n│   index.js\n└───typeDefs\n└───server.js\n    package.json\n```\n\nThe `resolvers` directory contains the resolver functions, also known as\ndata fetcher functions in GraphQL terminology, that resolve to data values. The `data` subdirectory in the `resolvers` directory contains the\nraw data for the mock GraphQl service. The `typeDefs` directory contains the GraphQL Object Type definitions.\n","type":"Mdx","contentDigest":"0fb89219171af6f4ab59cfb70eaf2d1d","owner":"gatsby-plugin-mdx","counter":84},"frontmatter":{"title":"Development environment","description":"Development environment"},"exports":{},"rawBody":"---\ntitle: Development environment\ndescription: Development environment\n---\n\nAmong other files, the repository contains the following significant items. Depending on your operating system, you might need to show hidden files to see them all.\n\n```\nSPM-UI-ADDON-DEV\n└───.storybook          The stories for the sample components. Add stories for your components here.\n└───cookbook            The developer documentation source files.\n└───packages            The repository provides these packages.\n    └───carbon-addon-devenv\n    └───custom-carbon-addons\n    └───graphql-mocks\n    .env                A starter React environment variable configuration file.\n```\n\n## The `carbon-addon-devenv` package\n\nThe `carbon-addon-devenv` package contains the development environment to work with Carbon components and to develop custom Carbon add-on components.\n\nIt contains two sample add-on components to help you to get started, which need a Java renderer and a GraphQL query to integrate them onto a UIM page.\n\n```\ncarbon-addon-devenv\n└───sample_renderers\n└───src\n└───stories\n    PersonFolio.stories.js\n```\n\nAn `npm` file is provided for the following open source packages:\n\n- Carbon Design System, which is an IBM open source design system. It consists of working code, design tools and resources, and human interface guidelines. For more information, see the [Carbon website](https://carbondesignsystem.com/).\n- React, which is an open source JavaScript library that enables developers to build human-centered user interfaces.\n- GraphQL, which is an open source data query language that enables developers to query and configure complex data queries that aggregate information from different database entities.\n- Apollo Client, which is an open source library that enables GraphQL developers to manage information state. Apollo Client provides the infrastructure for caching data.\n- Jest is a JavaScript testing framework that is designed to ensure the correctness of any JavaScript code base.\n- Enzyme is a JavaScript testing utility for React that makes it easier to test your React component's output.\n\n## The `custom-carbon-addons` package\n\nThe `custom-carbon-addons` package is where you must place all of your custom files, to ensure that upgrades do not affect your custom content.\n\n```\ncustom-carbon-addons\n└───renderers\n│   index.js\n└───src\n    package.json_sample\n\n```\n\n## The `graphql-mocks` package\n\nThe `graphql-mocks` package is where you can place data for mock GraphQL queries. This package essentially provides a\nlightweight mock GraphQL service that simulates the real GraphQL service from Cúram.\n\n```\ngraphql-mocks\n└───resolvers\n│   └─── data\n│   index.js\n└───typeDefs\n└───server.js\n    package.json\n```\n\nThe `resolvers` directory contains the resolver functions, also known as\ndata fetcher functions in GraphQL terminology, that resolve to data values. The `data` subdirectory in the `resolvers` directory contains the\nraw data for the mock GraphQl service. The `typeDefs` directory contains the GraphQL Object Type definitions.\n","fileAbsolutePath":"/home/runner/work/spm-ui-addon-devenv/spm-ui-addon-devenv/cookbook/src/pages/development-environment.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}