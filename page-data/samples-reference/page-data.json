{"componentChunkName":"component---src-pages-samples-reference-mdx","path":"/samples-reference/","result":{"pageContext":{"frontmatter":{"title":"Samples reference","description":"Samples reference"},"relativePagePath":"/samples-reference.mdx","titleType":"page","MdxNode":{"id":"af711ddf-58f5-5590-9d4a-0b9c631a7844","children":[],"parent":"c8f58210-cc38-5dd7-af55-1aac8d2d554b","internal":{"content":"---\ntitle: Samples reference\ndescription: Samples reference\n---\n\nSome sample Carbon component are provided in the `carbon-addons-devenv` package, which you can use as a reference or aid when starting to develop new Carbon components.\n\n- PersonFolio\n- Logo\n\nThese samples contain all that is needed for Carbon components:\n\n- The React component\n- Sass\n- A query provider in Apollo Client\n- A JavaScript renderer wrapper function\n\nUnit tests, a storybook wrapper, and a JavaScript documentation example are also provided.\n\nThe sample components are ready to be fully implemented and integrated into a custom UIM page by using a Java Renderer.\n\n### Examples of integrating components into a Java renderer\n\nFor guidance, the following code snippets, which don't include the imports, demonstrate how the PersonFolio and Logo sample components can be integrated into a Java Renderer. Configuring a Java render is described in [Rendering components on a UIM page](spm-uim-integration)\n\nAn example of integrating the sample PersonFolio component into a domain Java renderer on a UIM page is shown.\n\n```\npublic class PersonFolioSampleRenderer extends AbstractViewRenderer {\n\n  /**\n   * Constructor.\n   */\n  public PersonFolioSampleRenderer() {}\n\n  /**\n   * */\n  @Override\n  public void render(final Field field, final DocumentFragment fragment,\n    final RendererContext context, final RendererContract contract)\n    throws ClientException, DataAccessException, PlugInException {\n\n    final Element carbonWrapperDiv =\n      fragment.getOwnerDocument().createElement(\"div\");\n    final String carbonWrapperDivID = \"CarbonWrapperDiv\";\n    carbonWrapperDiv.setAttribute(\"id\", carbonWrapperDivID);\n    HTMLUtils.appendComment(carbonWrapperDiv, \"filler\");\n    carbonWrapperDiv.setAttribute(\"class\", \"spm-custom-component\");\n    fragment.appendChild(carbonWrapperDiv);\n    // label translations override default labels in Carbon component\n    // for properly translated labels, you must put them into a `*.properties` file and look them up using the `context.getDataAccessor()` function.\n    // final String labels =\n    //   \"{firstnameLabel: \\\"Translated First name\\\", surnameLabel: \\\"Translated Surname\\\", ageLabel: \\\"Translated Age\\\"}\";\n    final String labels = \"{}\";\n    final Map<String, String> map = new HashMap<String, String>();\n\n    includeCarbonComponent(context, carbonWrapperDivID, labels, \"{}\",\n      \"window.spmcustom.sampleRenderers.PersonFolio.PersonFolioRenderer\",\n      map);\n  }\n}\n```\n\nAn example of integrating the sample Logo component into a domain Java renderer on a UIM page is shown.\n\n```\npublic class LogoSampleRenderer extends AbstractViewRenderer {\n\n  /**\n   * Constructor.\n   */\n  public LogoSampleRenderer() {}\n\n  /**\n   * */\n  @Override\n  public void render(final Field field, final DocumentFragment fragment,\n    final RendererContext context, final RendererContract contract)\n    throws ClientException, DataAccessException, PlugInException {\n\n    final Element carbonWrapperDiv =\n      fragment.getOwnerDocument().createElement(\"div\");\n    final String carbonWrapperDivID = \"CarbonWrapperDiv\";\n    carbonWrapperDiv.setAttribute(\"id\", carbonWrapperDivID);\n    HTMLUtils.appendComment(carbonWrapperDiv, \"filler\");\n    carbonWrapperDiv.setAttribute(\"class\", \"spm-custom-component\");\n    fragment.appendChild(carbonWrapperDiv);\n    final String labels = \"{}\";\n    final Map<String, String> map = new HashMap<String, String>();\n\n    map.put(\"logoId\", \"id_2\");\n    includeCarbonComponent(context, carbonWrapperDivID, labels, \"{}\",\n      \"window.spmcustom.sampleRenderers.Logo.LogoRenderer\", map);\n  }\n}\n```\n","type":"Mdx","contentDigest":"ae963ab6158039adafdfcc9362ae8ba8","owner":"gatsby-plugin-mdx","counter":100},"frontmatter":{"title":"Samples reference","description":"Samples reference"},"exports":{},"rawBody":"---\ntitle: Samples reference\ndescription: Samples reference\n---\n\nSome sample Carbon component are provided in the `carbon-addons-devenv` package, which you can use as a reference or aid when starting to develop new Carbon components.\n\n- PersonFolio\n- Logo\n\nThese samples contain all that is needed for Carbon components:\n\n- The React component\n- Sass\n- A query provider in Apollo Client\n- A JavaScript renderer wrapper function\n\nUnit tests, a storybook wrapper, and a JavaScript documentation example are also provided.\n\nThe sample components are ready to be fully implemented and integrated into a custom UIM page by using a Java Renderer.\n\n### Examples of integrating components into a Java renderer\n\nFor guidance, the following code snippets, which don't include the imports, demonstrate how the PersonFolio and Logo sample components can be integrated into a Java Renderer. Configuring a Java render is described in [Rendering components on a UIM page](spm-uim-integration)\n\nAn example of integrating the sample PersonFolio component into a domain Java renderer on a UIM page is shown.\n\n```\npublic class PersonFolioSampleRenderer extends AbstractViewRenderer {\n\n  /**\n   * Constructor.\n   */\n  public PersonFolioSampleRenderer() {}\n\n  /**\n   * */\n  @Override\n  public void render(final Field field, final DocumentFragment fragment,\n    final RendererContext context, final RendererContract contract)\n    throws ClientException, DataAccessException, PlugInException {\n\n    final Element carbonWrapperDiv =\n      fragment.getOwnerDocument().createElement(\"div\");\n    final String carbonWrapperDivID = \"CarbonWrapperDiv\";\n    carbonWrapperDiv.setAttribute(\"id\", carbonWrapperDivID);\n    HTMLUtils.appendComment(carbonWrapperDiv, \"filler\");\n    carbonWrapperDiv.setAttribute(\"class\", \"spm-custom-component\");\n    fragment.appendChild(carbonWrapperDiv);\n    // label translations override default labels in Carbon component\n    // for properly translated labels, you must put them into a `*.properties` file and look them up using the `context.getDataAccessor()` function.\n    // final String labels =\n    //   \"{firstnameLabel: \\\"Translated First name\\\", surnameLabel: \\\"Translated Surname\\\", ageLabel: \\\"Translated Age\\\"}\";\n    final String labels = \"{}\";\n    final Map<String, String> map = new HashMap<String, String>();\n\n    includeCarbonComponent(context, carbonWrapperDivID, labels, \"{}\",\n      \"window.spmcustom.sampleRenderers.PersonFolio.PersonFolioRenderer\",\n      map);\n  }\n}\n```\n\nAn example of integrating the sample Logo component into a domain Java renderer on a UIM page is shown.\n\n```\npublic class LogoSampleRenderer extends AbstractViewRenderer {\n\n  /**\n   * Constructor.\n   */\n  public LogoSampleRenderer() {}\n\n  /**\n   * */\n  @Override\n  public void render(final Field field, final DocumentFragment fragment,\n    final RendererContext context, final RendererContract contract)\n    throws ClientException, DataAccessException, PlugInException {\n\n    final Element carbonWrapperDiv =\n      fragment.getOwnerDocument().createElement(\"div\");\n    final String carbonWrapperDivID = \"CarbonWrapperDiv\";\n    carbonWrapperDiv.setAttribute(\"id\", carbonWrapperDivID);\n    HTMLUtils.appendComment(carbonWrapperDiv, \"filler\");\n    carbonWrapperDiv.setAttribute(\"class\", \"spm-custom-component\");\n    fragment.appendChild(carbonWrapperDiv);\n    final String labels = \"{}\";\n    final Map<String, String> map = new HashMap<String, String>();\n\n    map.put(\"logoId\", \"id_2\");\n    includeCarbonComponent(context, carbonWrapperDivID, labels, \"{}\",\n      \"window.spmcustom.sampleRenderers.Logo.LogoRenderer\", map);\n  }\n}\n```\n","fileAbsolutePath":"/home/runner/work/spm-ui-addon-devenv/spm-ui-addon-devenv/cookbook/src/pages/samples-reference.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}